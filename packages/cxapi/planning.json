{
  "openapi": "3.0.2",
  "info": {
    "title": "CX WFM API (Agent, Planning, Admin)",
    "description": "The purpose of this API is to provide endpoints\n    for working with agent-data and schedules in CxWFM.",
    "version": "0.3.0"
  },
  "paths": {
    "/tenants/{tenant_id}/wfm/agents": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Agents",
        "description": "Retrieve agents.\n\nReturns all agents for the provided tenant.",
        "operationId": "get_agents_tenants_tenant_id_wfm_agents",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Agents Tenants  Tenant Id  Wfm Agents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Agent",
        "description": "Retrieve a single agent.",
        "operationId": "get_agent_tenants_tenant_id_wfm_agents_agent_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}/address": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Address",
        "description": "Retrieve an agent's address.",
        "operationId": "get_address_tenants_tenant_id_wfm_agents_agent_id_address",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Put Address",
        "description": "Add or update an agent's address.",
        "operationId": "put_address_tenants_tenant_id_wfm_agents_agent_id_address",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Agent"
        ],
        "summary": "Delete Address",
        "description": "Delete an agent's address.",
        "operationId": "delete_address_tenants_tenant_id_wfm_agents_agent_id_address",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}/employment": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Employment",
        "description": "Retrieve an agent's employment.",
        "operationId": "get_employment_tenants_tenant_id_wfm_agents_agent_id_employment",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Put Employment",
        "description": "Add or update an agent's employment.",
        "operationId": "put_employment_tenants_tenant_id_wfm_agents_agent_id_employment",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmploymentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Agent"
        ],
        "summary": "Delete Employment",
        "description": "Delete an agent's employment.",
        "operationId": "delete_employment_tenants_tenant_id_wfm_agents_agent_id_employment",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}/availability": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get All Availabilities",
        "description": "Retrieve all availability patterns assigned to an agent.",
        "operationId": "get_all_availabilities_tenants_tenant_id_wfm_agents_agent_id_availability",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Availabilities Tenants  Tenant Id  Wfm Agents  Agent Id  Availability Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentAvailabilityPatternDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Post Availability",
        "description": "Assign an availability pattern to an agent.\n\nAdds a new assignment of a availability pattern to an agent. Multiple\npatterns can be added per agent as long as the date-range\nwhen for which it is assigned do not overlap. Treated as a closed interval.",
        "operationId": "post_availability_tenants_tenant_id_wfm_agents_agent_id_availability",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentAvailabilityPatternDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Availability Tenants  Tenant Id  Wfm Agents  Agent Id  Availability Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentAvailabilityPatternDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}/availability/{availability_pattern_id}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Availability",
        "description": "Retrieve a specific assignment of an availability pattern to an agent.",
        "operationId": "get_availability_tenants_tenant_id_wfm_agents_agent_id_availability_availability_pattern_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Availability Pattern Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "availability_pattern_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentAvailabilityPatternDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Agent"
        ],
        "summary": "Delete Availability",
        "description": "Remove an assigned availability pattern for an agent.",
        "operationId": "delete_availability_tenants_tenant_id_wfm_agents_agent_id_availability_availability_pattern_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Availability Pattern Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "availability_pattern_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}/restrictions": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Assigned Restriction Sets",
        "description": "Get all restriction sets assigned to an agent.",
        "operationId": "get_assigned_restriction_sets_tenants_tenant_id_wfm_agents_agent_id_restrictions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Assigned Restriction Sets Tenants  Tenant Id  Wfm Agents  Agent Id  Restrictions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedRestrictionSetDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Post Assigned Restriction Set",
        "description": "Assign a restriction set to an agent.\n\nA restriction set can only be added if it does not overlap\nin time with an existing restriction set.",
        "operationId": "post_assigned_restriction_set_tenants_tenant_id_wfm_agents_agent_id_restrictions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAssignedRestrictionSetDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignedRestrictionSetDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}/restrictions/{assigned_restriction_set_id}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Assigned Restriction Set",
        "description": "Retrieve a single assigned restriction set.",
        "operationId": "get_assigned_restriction_set_tenants_tenant_id_wfm_agents_agent_id_restrictions_assigned_restriction_set_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Assigned Restriction Set Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "assigned_restriction_set_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignedRestrictionSetDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Agent"
        ],
        "summary": "Delete Assigned Restriction Set",
        "description": "Remove an assigned restriction set.",
        "operationId": "delete_assigned_restriction_set_tenants_tenant_id_wfm_agents_agent_id_restrictions_assigned_restriction_set_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Assigned Restriction Set Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "assigned_restriction_set_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Agent"
        ],
        "summary": "Patch Assigned Restriction Set",
        "description": "Update a single assigned restriction set.",
        "operationId": "patch_assigned_restriction_set_tenants_tenant_id_wfm_agents_agent_id_restrictions_assigned_restriction_set_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Assigned Restriction Set Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "assigned_restriction_set_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignedRestrictionSetPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignedRestrictionSetDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/agents/{agent_id}/competencies": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get Competencies",
        "description": "Get all competencies associated with an agent.",
        "operationId": "get_competencies_tenants_tenant_id_wfm_agents_agent_id_competencies",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Agent Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "agent_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Competencies Tenants  Tenant Id  Wfm Agents  Agent Id  Competencies Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompetencyDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/availabilitypatterns": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Get All",
        "description": "Retrieve all availabilities of one tenant.",
        "operationId": "get_all_tenants_tenant_id_wfm_availabilitypatterns",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/availabilitypatterns/{availability_pattern_id}": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Get",
        "description": "Retrieve a single availability.",
        "operationId": "get_tenants_tenant_id_wfm_availabilitypatterns_availability_pattern_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Availability Pattern Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "availability_pattern_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Availability"
        ],
        "summary": "Put",
        "description": "Update an availability pattern.",
        "operationId": "put_tenants_tenant_id_wfm_availabilitypatterns_availability_pattern_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Availability Pattern Id"
            },
            "name": "availability_pattern_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityPatternDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Availability"
        ],
        "summary": "Delete",
        "description": "Delete an availability pattern.",
        "operationId": "delete_tenants_tenant_id_wfm_availabilitypatterns_availability_pattern_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Availability Pattern Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "availability_pattern_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get All",
        "description": "Retrieve a all plans in a tenant.",
        "operationId": "get_all_tenants_tenant_id_wfm_plans",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Includedeleted",
              "type": "boolean"
            },
            "name": "includeDeleted",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Tenants  Tenant Id  Wfm Plans Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Plans"
        ],
        "summary": "Post",
        "description": "Add a new plan.",
        "operationId": "post_tenants_tenant_id_wfm_plans",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get",
        "description": "Retrieve a single plan.",
        "operationId": "get_tenants_tenant_id_wfm_plans_plan_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Plans"
        ],
        "summary": "Delete",
        "description": "Delete a plan.",
        "operationId": "delete_tenants_tenant_id_wfm_plans_plan_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Plans"
        ],
        "summary": "Patch",
        "description": "Update a plan.",
        "operationId": "patch_tenants_tenant_id_wfm_plans_plan_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/activities": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get All",
        "description": "Retrieve all activities.",
        "operationId": "get_all_tenants_tenant_id_wfm_activities",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Tenants  Tenant Id  Wfm Activities Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Post",
        "description": "Create a new activity type.",
        "operationId": "post_tenants_tenant_id_wfm_activities",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/activities/{activity_id}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get",
        "description": "Get a single activity.",
        "operationId": "get_tenants_tenant_id_wfm_activities_activity_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Activity Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "activity_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Activities"
        ],
        "summary": "Patch",
        "description": "Update a single activity.",
        "operationId": "patch_tenants_tenant_id_wfm_activities_activity_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Activity Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "activity_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/schedules/query": {
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Query",
        "description": "Query for schedules.\n\nReturns all schedules that covers the period that is provided in the query\n(if any).",
        "operationId": "query_tenants_tenant_id_wfm_plans_plan_id_schedules_query",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Includedeleted",
              "type": "boolean"
            },
            "name": "includeDeleted",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleQueryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Query Tenants  Tenant Id  Wfm Plans  Plan Id  Schedules Query Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/schedules/copy": {
      "post": {
        "tags": [
          "Not implemented"
        ],
        "summary": "Copy",
        "description": "Copy schedules from other plan.\n\nCopies the provided schedules from the source plan to this plan (target).\nAgents that have schedules in the target plan will have those overwritten\nunless the schedules are marked as locked. Schedules can only be copied\nfrom within the same schedule period.",
        "operationId": "copy_tenants_tenant_id_wfm_plans_plan_id_schedules_copy",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCopyDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Failure, possible reasons:\n                  (If a failure occurs, no schedules are copied).\n\n                  * There are overlapping shifts with the previous or\n                  following schedule period in the target plan.\n                 "
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/schedules": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Get All",
        "description": "Retrieve all schedules for a plan.",
        "operationId": "get_all_tenants_tenant_id_wfm_plans_plan_id_schedules",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Includedeleted",
              "type": "boolean"
            },
            "name": "includeDeleted",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Tenants  Tenant Id  Wfm Plans  Plan Id  Schedules Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Post",
        "description": "Add a new set of schedules.",
        "operationId": "post_tenants_tenant_id_wfm_plans_plan_id_schedules",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Schedule Dtos",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Tenants  Tenant Id  Wfm Plans  Plan Id  Schedules Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure, possible reasons:\n\n                    * Missing or invalid `schedulePeriodId`\n                    * See failures for `POST` shifts\n                 "
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/schedules/{schedule_id}": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Get",
        "description": "Retrieve a single schedule.",
        "operationId": "get_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedules"
        ],
        "summary": "Delete",
        "description": "Soft delete a schedule.",
        "operationId": "delete_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Schedules"
        ],
        "summary": "Patch",
        "description": "Update a single schedule.",
        "operationId": "patch_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Failure, see `POST`."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/schedules/{schedule_id}/shifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get All",
        "description": "Retrieve all shifts for a schedule.",
        "operationId": "get_all_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id_shifts",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Includedeleted",
              "type": "boolean"
            },
            "name": "includeDeleted",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Tenants  Tenant Id  Wfm Plans  Plan Id  Schedules  Schedule Id  Shifts Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShiftDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Post",
        "description": "Add a new set of shifts to a schedule.",
        "operationId": "post_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id_shifts",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Shift Dtos",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShiftDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Tenants  Tenant Id  Wfm Plans  Plan Id  Schedules  Schedule Id  Shifts Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShiftDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure reasons:\n\n                * activity start time must be before end time\n                * activities must follow sequentially\n                * shifts must contain at least one activity\n                * there must be at least one activity in a shift\n                 "
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/schedules/{schedule_id}/shifts/{shift_id}": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get",
        "description": "Retrieve a single shift.",
        "operationId": "get_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id_shifts_shift_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Shift Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "shift_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shifts"
        ],
        "summary": "Delete",
        "description": "Soft delete a shift.",
        "operationId": "delete_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id_shifts_shift_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Shift Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "shift_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Shifts"
        ],
        "summary": "Patch",
        "description": "Update a single shift.",
        "operationId": "patch_tenants_tenant_id_wfm_plans_plan_id_schedules_schedule_id_shifts_shift_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Schedule Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "schedule_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Shift Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "shift_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDTO"
                }
              }
            }
          },
          "400": {
            "description": "See failure reasons for `POST`"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/breaksettings": {
      "get": {
        "tags": [
          "Break settings"
        ],
        "summary": "Get All",
        "description": "Retrieve all break settings for a tenant.",
        "operationId": "get_all_tenants_tenant_id_wfm_breaksettings",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Tenants  Tenant Id  Wfm Breaksettings Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BreakSettingsDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Break settings"
        ],
        "summary": "Post",
        "description": "Add a new break setting to a tenant.",
        "operationId": "post_tenants_tenant_id_wfm_breaksettings",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BreakSettingsDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakSettingsDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/breaksettings/{breaksetting_id}": {
      "get": {
        "tags": [
          "Break settings"
        ],
        "summary": "Get",
        "description": "Retrieve a single break setting.",
        "operationId": "get_tenants_tenant_id_wfm_breaksettings_breaksetting_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Breaksetting Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "breaksetting_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakSettingsDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Break settings"
        ],
        "summary": "Delete",
        "description": "Delete a single break setting.",
        "operationId": "delete_tenants_tenant_id_wfm_breaksettings_breaksetting_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Breaksetting Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "breaksetting_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Break settings"
        ],
        "summary": "Patch",
        "description": "Update single breaksetting.",
        "operationId": "patch_tenants_tenant_id_wfm_breaksettings_breaksetting_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Breaksetting Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "breaksetting_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BreakSettingsUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakSettingsDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Get Status",
        "description": "Handle healthcheck.",
        "operationId": "get_status_status",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/restrictionsets": {
      "get": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Get All",
        "description": "Retrieve all Restriction sets.",
        "operationId": "get_all_tenants_tenant_id_wfm_restrictionsets",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Tenants  Tenant Id  Wfm Restrictionsets Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestrictionSetDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Post",
        "description": "Add a new restriction set.",
        "operationId": "post_tenants_tenant_id_wfm_restrictionsets",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRestrictionSetDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionSetDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/restrictionsets/{restriction_set_id}": {
      "get": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Get",
        "description": "Retrieve a single restriction set.",
        "operationId": "get_tenants_tenant_id_wfm_restrictionsets_restriction_set_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Restriction Set Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "restriction_set_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionSetDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Delete",
        "description": "Delete a single restriction set.",
        "operationId": "delete_tenants_tenant_id_wfm_restrictionsets_restriction_set_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Restriction Set Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "restriction_set_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Patch",
        "description": "Update a single restriction set.",
        "operationId": "patch_tenants_tenant_id_wfm_restrictionsets_restriction_set_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Restriction Set Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "restriction_set_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionSetPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionSetDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/scheduleperiods": {
      "get": {
        "tags": [
          "Schedule Period"
        ],
        "summary": "Get All",
        "description": "Retrieve all schedule periods.",
        "operationId": "get_all_tenants_tenant_id_wfm_scheduleperiods",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Tenants  Tenant Id  Wfm Scheduleperiods Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchedulePeriodDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedule Period"
        ],
        "summary": "Post",
        "description": "Add a new schedule period.",
        "operationId": "post_tenants_tenant_id_wfm_scheduleperiods",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodDTO"
                }
              }
            }
          },
          "400": {
            "description": "Failure. Possible reasons are:\n\n                * The date-range overlaps with another SchedulePeriod.\n                * The name is not unique.\n             "
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/scheduleperiods/{id}": {
      "get": {
        "tags": [
          "Schedule Period"
        ],
        "summary": "Get",
        "description": "Retrieve a single schedule period.",
        "operationId": "get_tenants_tenant_id_wfm_scheduleperiods_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule Period"
        ],
        "summary": "Delete",
        "description": "Delete a single schedule period.",
        "operationId": "delete_tenants_tenant_id_wfm_scheduleperiods_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Possible reasons:\n\n                    * There are schedules associated with the schedule period.\n                  "
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Schedule Period"
        ],
        "summary": "Patch",
        "description": "Update an existing schedule period.",
        "operationId": "patch_tenants_tenant_id_wfm_scheduleperiods_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodDTO"
                }
              }
            }
          },
          "400": {
            "description": "Failure, see `POST` for details."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/optimization": {
      "get": {
        "tags": [
          "Optimization"
        ],
        "summary": "Get Optimization",
        "description": "Get the current optimization.",
        "operationId": "get_optimization_tenants_tenant_id_wfm_plans_plan_id_optimization",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Optimization"
        ],
        "summary": "Put Optimization",
        "description": "Start the current optimization.\n\nStarts an optimization using forecasts from the specified competencies,\nthe optimization will use forcasts from the timeline specified in the\nrequest. The optimization will plan and save schedules for all\nagents for the specified schedule period, if it is possible to\ncreate a schedule based on the restrictions. If\nagents have assigned restrictions those will be used, if no restrictions are\nfound the tenant defaults will be used. Breaks will be planned if there are\nbreaksettings specified, first according to settings assigned to an agent\notherwise the defaults are used. The optimization will plan default\nactivities for operator work, paid break and unpaid break, default\ntenant activities has to be specified to run the optimization.",
        "operationId": "put_optimization_tenants_tenant_id_wfm_plans_plan_id_optimization",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOptimizationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationDTO"
                }
              }
            }
          },
          "400": {
            "description": "Failure reasons:\n\n                    * Cannot initiate a new optimization while there is one\n                    running or pending.\n                    * Cannot optimize the official plan, check the plan id.\n                    * Competencies not found, check the competency ids.\n                    * Agents not found, check the agent ids.\n                    * Missing a default activity. Required defaults are operator\n                    work, paid break and unpaid break.\n                    * Missing default restrictions if not all agents have\n                    assigned restrictions.\n            "
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Optimization"
        ],
        "summary": "Delete Optimization",
        "description": "Cancel the current optimization.\n\nDeleting an optimization will not remove the entity itself or the resulting\nschedules. The optimization run will continue to run to end but the result\nwill not be used in the schedules.",
        "operationId": "delete_optimization_tenants_tenant_id_wfm_plans_plan_id_optimization",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/competencies": {
      "get": {
        "tags": [
          "Competency"
        ],
        "summary": "Get All Competencies",
        "description": "Retrieve all competencies for a tenant.",
        "operationId": "get_all_competencies_tenants_tenant_id_wfm_competencies",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Competencies Tenants  Tenant Id  Wfm Competencies Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompetencyDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/competencies/{competency_id}/agents": {
      "get": {
        "tags": [
          "Competency"
        ],
        "summary": "Get Agents",
        "description": "Retrieve all agents associated with a competency.",
        "operationId": "get_agents_tenants_tenant_id_wfm_competencies_competency_id_agents",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Competency Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "competency_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Agents Tenants  Tenant Id  Wfm Competencies  Competency Id  Agents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentDTO"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/wfm/plans/{plan_id}/simulation": {
      "post": {
        "tags": [
          "Simulation"
        ],
        "summary": "Post Simulation",
        "description": "Route to create a simulation.",
        "operationId": "post_simulation_tenants_tenant_id_wfm_plans_plan_id_simulation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "tenant_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "plan_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Tenant",
              "type": "string"
            },
            "name": "x-cx-auth-tenant",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Cx-Auth-Platform",
              "type": "string"
            },
            "name": "x-cx-auth-platform",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimulationRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulationDTO"
                }
              }
            }
          },
          "400": {
            "description": "Failure reasons:\n              * Only agents or competencies can be provided, not both.\n              * Competencies not found, check the competency ids.\n              * Agents not found, check the agent ids.\n              "
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/changelog.md": {
      "get": {
        "summary": " Get Changelog",
        "operationId": "_get_changelog_changelog.md",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityCategory": {
        "title": "ActivityCategory",
        "enum": [
          "work",
          "operator_work",
          "break",
          "absence",
          "vacation"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ActivityDTO": {
        "title": "ActivityDTO",
        "required": [
          "name",
          "paid",
          "category"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "category": {
            "$ref": "#/components/schemas/ActivityCategory"
          },
          "disabled": {
            "title": "Disabled",
            "type": "boolean",
            "default": false
          }
        },
        "description": "Represent the DTO-model for an activity."
      },
      "ActivityPatchDTO": {
        "title": "ActivityPatchDTO",
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "category": {
            "$ref": "#/components/schemas/ActivityCategory"
          },
          "disabled": {
            "title": "Disabled",
            "type": "boolean"
          }
        },
        "description": "Represents the DTO-model for patching an activity."
      },
      "AddressDTO": {
        "title": "AddressDTO",
        "type": "object",
        "properties": {
          "addressLine1": {
            "title": "Addressline1",
            "type": "string"
          },
          "addressLine2": {
            "title": "Addressline2",
            "type": "string"
          },
          "addressLine3": {
            "title": "Addressline3",
            "type": "string"
          },
          "city": {
            "title": "City",
            "type": "string"
          },
          "postCode": {
            "title": "Postcode",
            "type": "string"
          },
          "country": {
            "title": "Country",
            "type": "string"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          }
        },
        "description": "DTO representing an agent's address."
      },
      "AgentAvailabilityPatternDTO": {
        "title": "AgentAvailabilityPatternDTO",
        "required": [
          "id",
          "availabilityPatternId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "availabilityPatternId": {
            "title": "Availabilitypatternid",
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "title": "Startdate",
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "title": "Enddate",
            "type": "string",
            "format": "date"
          }
        },
        "description": "Links an agent to an availability."
      },
      "AgentDTO": {
        "title": "AgentDTO",
        "required": [
          "id",
          "tenantId",
          "firstName",
          "lastName",
          "role",
          "externalId",
          "email",
          "active"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "title": "Tenantid",
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "title": "Firstname",
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "externalId": {
            "title": "Externalid",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "capacityId": {
            "title": "Capacityid",
            "type": "string",
            "format": "uuid"
          }
        },
        "description": "Represents an agent."
      },
      "AgentOccupancyLimit": {
        "title": "AgentOccupancyLimit",
        "required": [
          "limit",
          "numberOfAgents"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "title": "Limit",
            "maximum": 1,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "numberOfAgents": {
            "title": "Numberofagents",
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "description": "Contain data for how many agents are above or below the limit."
      },
      "AgentResult": {
        "title": "AgentResult",
        "required": [
          "id",
          "occupancy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "occupancy": {
            "title": "Occupancy",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "description": "Simulation result for one agent."
      },
      "AssignedRestrictionSetDTO": {
        "title": "AssignedRestrictionSetDTO",
        "required": [
          "startDate",
          "endDate",
          "restrictionSetId",
          "id"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "title": "Startdate",
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "title": "Enddate",
            "type": "string",
            "format": "date"
          },
          "restrictionSetId": {
            "title": "Restrictionsetid",
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          }
        },
        "description": "Assigned restriction set dto for responses."
      },
      "AssignedRestrictionSetPatchDTO": {
        "title": "AssignedRestrictionSetPatchDTO",
        "type": "object",
        "properties": {
          "startDate": {
            "title": "Startdate",
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "title": "Enddate",
            "type": "string",
            "format": "date"
          },
          "restrictionSetId": {
            "title": "Restrictionsetid",
            "type": "string",
            "format": "uuid"
          }
        },
        "description": "Assigned restriction set dto for updates."
      },
      "AvailabilityElementDTO": {
        "title": "AvailabilityElementDTO",
        "required": [
          "intervalType",
          "dayNumber"
        ],
        "type": "object",
        "properties": {
          "intervalType": {
            "title": "Intervaltype",
            "pattern": "^(available|unavailable)$",
            "type": "string",
            "description": "Allowed values are 'available' or 'unavailable'"
          },
          "dayNumber": {
            "title": "Daynumber",
            "maximum": 6,
            "minimum": 0,
            "type": "integer"
          },
          "weekNumber": {
            "title": "Weeknumber",
            "minimum": 1,
            "type": "integer",
            "default": 1
          },
          "startTime": {
            "title": "Starttime",
            "type": "string"
          },
          "endTime": {
            "title": "Endtime",
            "type": "string"
          }
        },
        "description": "Represents DTO-model for availabiliy elements."
      },
      "AvailabilityPatternDTO": {
        "title": "AvailabilityPatternDTO",
        "required": [
          "name",
          "elements"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "elements": {
            "title": "Elements",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityElementDTO"
            }
          }
        },
        "description": "Represents DTO model for an AvailabilityPattern."
      },
      "BreakDTO": {
        "title": "BreakDTO",
        "required": [
          "paid",
          "length",
          "intervalStart",
          "intervalEnd"
        ],
        "type": "object",
        "properties": {
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "length": {
            "title": "Length",
            "type": "integer"
          },
          "intervalStart": {
            "title": "Intervalstart",
            "type": "integer"
          },
          "intervalEnd": {
            "title": "Intervalend",
            "type": "integer"
          }
        },
        "description": "Represents the DTO-model for a break."
      },
      "BreakSettingsDTO": {
        "title": "BreakSettingsDTO",
        "required": [
          "shiftLengthMin",
          "shiftLengthMax",
          "shiftStartMin",
          "shiftStartMax",
          "timeBetweenBreaksMin",
          "dayTypes",
          "breaks"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "shiftLengthMin": {
            "title": "Shiftlengthmin",
            "type": "integer"
          },
          "shiftLengthMax": {
            "title": "Shiftlengthmax",
            "type": "integer"
          },
          "shiftStartMin": {
            "title": "Shiftstartmin",
            "type": "string"
          },
          "shiftStartMax": {
            "title": "Shiftstartmax",
            "type": "string"
          },
          "timeBetweenBreaksMin": {
            "title": "Timebetweenbreaksmin",
            "type": "integer"
          },
          "dayTypes": {
            "title": "Daytypes",
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 7
            }
          },
          "breaks": {
            "title": "Breaks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakDTO"
            }
          }
        },
        "description": "Represents the DTO-model for a break settings."
      },
      "BreakSettingsUpdateDTO": {
        "title": "BreakSettingsUpdateDTO",
        "type": "object",
        "properties": {
          "shiftLengthMin": {
            "title": "Shiftlengthmin",
            "type": "integer"
          },
          "shiftLengthMax": {
            "title": "Shiftlengthmax",
            "type": "integer"
          },
          "shiftStartMin": {
            "title": "Shiftstartmin",
            "type": "string"
          },
          "shiftStartMax": {
            "title": "Shiftstartmax",
            "type": "string"
          },
          "timeBetweenBreaksMin": {
            "title": "Timebetweenbreaksmin",
            "type": "integer"
          },
          "dayTypes": {
            "title": "Daytypes",
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 7
            }
          },
          "breaks": {
            "title": "Breaks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakDTO"
            }
          }
        },
        "description": "DTO-model for breaksettings updates."
      },
      "ChannelType": {
        "title": "ChannelType",
        "enum": [
          "voice",
          "messaging",
          "sms",
          "email",
          "work-item"
        ],
        "type": "string",
        "description": "Interaction types supported by CxEngage."
      },
      "CompetencyDTO": {
        "title": "CompetencyDTO",
        "required": [
          "name",
          "type",
          "active"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CompetencyType"
          },
          "active": {
            "title": "Active",
            "type": "boolean"
          }
        },
        "description": "A DTO model used to return the dto object."
      },
      "CompetencyResult": {
        "title": "CompetencyResult",
        "required": [
          "id",
          "channelType",
          "backlog",
          "handledWithinSla",
          "handled",
          "abandons"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "channelType": {
            "$ref": "#/components/schemas/ChannelType"
          },
          "backlog": {
            "title": "Backlog",
            "type": "integer"
          },
          "handledWithinSla": {
            "title": "Handledwithinsla",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "handled": {
            "title": "Handled",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "abandons": {
            "title": "Abandons",
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "description": "Simulation result for one competency and channel type.\n\nThe competency is queue based."
      },
      "CompetencyType": {
        "title": "CompetencyType",
        "enum": [
          "manual",
          "queue"
        ],
        "description": "Type of competency."
      },
      "EmploymentDTO": {
        "title": "EmploymentDTO",
        "type": "object",
        "properties": {
          "start": {
            "title": "Start",
            "type": "string",
            "format": "date"
          },
          "end": {
            "title": "End",
            "type": "string",
            "format": "date"
          },
          "hourlySalary": {
            "title": "Hourlysalary",
            "minimum": 0,
            "type": "number"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string"
          }
        },
        "description": "DTO for employment."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "JobStatus": {
        "title": "JobStatus",
        "enum": [
          "pending",
          "running",
          "success",
          "failed"
        ],
        "type": "string",
        "description": "Status for jobs."
      },
      "NewAgentAvailabilityPatternDTO": {
        "title": "NewAgentAvailabilityPatternDTO",
        "required": [
          "availabilityPatternId"
        ],
        "type": "object",
        "properties": {
          "availabilityPatternId": {
            "title": "Availabilitypatternid",
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "title": "Startdate",
            "type": "string"
          },
          "endDate": {
            "title": "Enddate",
            "type": "string"
          }
        },
        "description": "Links an agent to an availability."
      },
      "NewAssignedRestrictionSetDTO": {
        "title": "NewAssignedRestrictionSetDTO",
        "required": [
          "startDate",
          "endDate",
          "restrictionSetId"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "title": "Startdate",
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "title": "Enddate",
            "type": "string",
            "format": "date"
          },
          "restrictionSetId": {
            "title": "Restrictionsetid",
            "type": "string",
            "format": "uuid"
          }
        },
        "description": "Assigned restriction set dto for requests."
      },
      "NewOptimizationDTO": {
        "title": "NewOptimizationDTO",
        "required": [
          "schedulePeriodId",
          "agents",
          "competencies"
        ],
        "type": "object",
        "properties": {
          "schedulePeriodId": {
            "title": "Scheduleperiodid",
            "type": "string",
            "format": "uuid"
          },
          "timelineId": {
            "title": "Timelineid",
            "type": "string",
            "format": "uuid"
          },
          "agents": {
            "title": "Agents",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "competencies": {
            "title": "Competencies",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": "Class used to create a new optimization."
      },
      "NewRestrictionSetDTO": {
        "title": "NewRestrictionSetDTO",
        "required": [
          "name",
          "description",
          "default",
          "agreedWeeklyHours",
          "minHoursWeek",
          "maxHoursWeek",
          "agreedDaysPerWeek",
          "minDaysPerWeek",
          "maxDaysPerWeek",
          "minShiftLengthHours",
          "maxShiftLengthHours",
          "maxConsecutiveWorkDays",
          "minHoursNightRest",
          "maxConsecutiveWeekends"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "maxLength": 100,
            "type": "string"
          },
          "default": {
            "title": "Default",
            "type": "boolean"
          },
          "agreedWeeklyHours": {
            "title": "Agreedweeklyhours",
            "minimum": 0,
            "type": "integer"
          },
          "minHoursWeek": {
            "title": "Minhoursweek",
            "minimum": 0,
            "type": "integer"
          },
          "maxHoursWeek": {
            "title": "Maxhoursweek",
            "minimum": 0,
            "type": "integer"
          },
          "agreedDaysPerWeek": {
            "title": "Agreeddaysperweek",
            "maximum": 7,
            "minimum": 1,
            "type": "integer"
          },
          "minDaysPerWeek": {
            "title": "Mindaysperweek",
            "maximum": 6,
            "minimum": 0,
            "type": "integer"
          },
          "maxDaysPerWeek": {
            "title": "Maxdaysperweek",
            "maximum": 7,
            "minimum": 1,
            "type": "integer"
          },
          "minShiftLengthHours": {
            "title": "Minshiftlengthhours",
            "minimum": 0,
            "type": "integer"
          },
          "maxShiftLengthHours": {
            "title": "Maxshiftlengthhours",
            "minimum": 0,
            "type": "integer"
          },
          "maxConsecutiveWorkDays": {
            "title": "Maxconsecutiveworkdays",
            "minimum": 0,
            "type": "integer"
          },
          "minHoursNightRest": {
            "title": "Minhoursnightrest",
            "minimum": 0,
            "type": "integer"
          },
          "maxConsecutiveWeekends": {
            "title": "Maxconsecutiveweekends",
            "exclusiveMinimum": 0,
            "type": "integer"
          }
        },
        "description": "Restriction set dto for requests."
      },
      "OptimizationDTO": {
        "title": "OptimizationDTO",
        "required": [
          "schedulePeriodId",
          "agents",
          "competencies",
          "status"
        ],
        "type": "object",
        "properties": {
          "schedulePeriodId": {
            "title": "Scheduleperiodid",
            "type": "string",
            "format": "uuid"
          },
          "timelineId": {
            "title": "Timelineid",
            "type": "string",
            "format": "uuid"
          },
          "agents": {
            "title": "Agents",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "competencies": {
            "title": "Competencies",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus"
          }
        },
        "description": "The response class for optimizations."
      },
      "PlanDTO": {
        "title": "PlanDTO",
        "required": [
          "name",
          "official"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "official": {
            "title": "Official",
            "type": "boolean"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean",
            "default": false
          }
        },
        "description": "Represents the DTO-model for a planning period."
      },
      "PlanPatchDTO": {
        "title": "PlanPatchDTO",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "official": {
            "title": "Official",
            "type": "boolean"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          }
        },
        "description": "Represents the data model that is used for PATCH-operations."
      },
      "RestrictionSetDTO": {
        "title": "RestrictionSetDTO",
        "required": [
          "name",
          "description",
          "default",
          "agreedWeeklyHours",
          "minHoursWeek",
          "maxHoursWeek",
          "agreedDaysPerWeek",
          "minDaysPerWeek",
          "maxDaysPerWeek",
          "minShiftLengthHours",
          "maxShiftLengthHours",
          "maxConsecutiveWorkDays",
          "minHoursNightRest",
          "maxConsecutiveWeekends",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "maxLength": 100,
            "type": "string"
          },
          "default": {
            "title": "Default",
            "type": "boolean"
          },
          "agreedWeeklyHours": {
            "title": "Agreedweeklyhours",
            "minimum": 0,
            "type": "integer"
          },
          "minHoursWeek": {
            "title": "Minhoursweek",
            "minimum": 0,
            "type": "integer"
          },
          "maxHoursWeek": {
            "title": "Maxhoursweek",
            "minimum": 0,
            "type": "integer"
          },
          "agreedDaysPerWeek": {
            "title": "Agreeddaysperweek",
            "maximum": 7,
            "minimum": 1,
            "type": "integer"
          },
          "minDaysPerWeek": {
            "title": "Mindaysperweek",
            "maximum": 6,
            "minimum": 0,
            "type": "integer"
          },
          "maxDaysPerWeek": {
            "title": "Maxdaysperweek",
            "maximum": 7,
            "minimum": 1,
            "type": "integer"
          },
          "minShiftLengthHours": {
            "title": "Minshiftlengthhours",
            "minimum": 0,
            "type": "integer"
          },
          "maxShiftLengthHours": {
            "title": "Maxshiftlengthhours",
            "minimum": 0,
            "type": "integer"
          },
          "maxConsecutiveWorkDays": {
            "title": "Maxconsecutiveworkdays",
            "minimum": 0,
            "type": "integer"
          },
          "minHoursNightRest": {
            "title": "Minhoursnightrest",
            "minimum": 0,
            "type": "integer"
          },
          "maxConsecutiveWeekends": {
            "title": "Maxconsecutiveweekends",
            "exclusiveMinimum": 0,
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          }
        },
        "description": "Restriction set dto for responses."
      },
      "RestrictionSetPatchDTO": {
        "title": "RestrictionSetPatchDTO",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "maxLength": 100,
            "type": "string"
          },
          "default": {
            "title": "Default",
            "type": "boolean"
          },
          "agreedWeeklyHours": {
            "title": "Agreedweeklyhours",
            "minimum": 0,
            "type": "integer"
          },
          "minHoursWeek": {
            "title": "Minhoursweek",
            "minimum": 0,
            "type": "integer"
          },
          "maxHoursWeek": {
            "title": "Maxhoursweek",
            "minimum": 0,
            "type": "integer"
          },
          "agreedDaysPerWeek": {
            "title": "Agreeddaysperweek",
            "maximum": 7,
            "minimum": 1,
            "type": "integer"
          },
          "minDaysPerWeek": {
            "title": "Mindaysperweek",
            "maximum": 6,
            "minimum": 0,
            "type": "integer"
          },
          "maxDaysPerWeek": {
            "title": "Maxdaysperweek",
            "maximum": 7,
            "minimum": 1,
            "type": "integer"
          },
          "minShiftLengthHours": {
            "title": "Minshiftlengthhours",
            "minimum": 0,
            "type": "integer"
          },
          "maxShiftLengthHours": {
            "title": "Maxshiftlengthhours",
            "minimum": 0,
            "type": "integer"
          },
          "maxConsecutiveWorkDays": {
            "title": "Maxconsecutiveworkdays",
            "minimum": 0,
            "type": "integer"
          },
          "minHoursNightRest": {
            "title": "Minhoursnightrest",
            "minimum": 0,
            "type": "integer"
          },
          "maxConsecutiveWeekends": {
            "title": "Maxconsecutiveweekends",
            "exclusiveMinimum": 0,
            "type": "integer"
          }
        },
        "description": "Restriction set dto for updates."
      },
      "ScheduleCopyDTO": {
        "title": "ScheduleCopyDTO",
        "required": [
          "schedulePeriod",
          "sourcePlan",
          "schedules"
        ],
        "type": "object",
        "properties": {
          "schedulePeriod": {
            "title": "Scheduleperiod",
            "type": "string",
            "format": "uuid"
          },
          "sourcePlan": {
            "title": "Sourceplan",
            "type": "string",
            "format": "uuid"
          },
          "schedules": {
            "title": "Schedules",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Synchronize"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            ]
          }
        },
        "description": "Represents the DTO-model for a schedule copy request.\n\nAttributes\n----------\nschedule_period : UUID\n\nsource_plan : UUID\n\nschedules : Union[Synchronize, List[UUID]]\n  Either a list of the schedules that should be copied or the value\n  `synchronize`. If `synchronize` is used then a complete synchronization\n  is being done meaning that all schedules in the target-plan will be\n  removed before the new schedules are copied."
      },
      "ScheduleDTO": {
        "title": "ScheduleDTO",
        "required": [
          "schedulePeriodId",
          "locked",
          "deleted",
          "shifts"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "agentId": {
            "title": "Agentid",
            "type": "string",
            "format": "uuid"
          },
          "schedulePeriodId": {
            "title": "Scheduleperiodid",
            "type": "string",
            "format": "uuid"
          },
          "locked": {
            "title": "Locked",
            "type": "boolean"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "shifts": {
            "title": "Shifts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftDTO"
            }
          }
        },
        "description": "Represents the DTO-model for a schedule."
      },
      "SchedulePatchDTO": {
        "title": "SchedulePatchDTO",
        "type": "object",
        "properties": {
          "agentId": {
            "title": "Agentid",
            "type": "string",
            "format": "uuid"
          },
          "schedulePeriodId": {
            "title": "Scheduleperiodid",
            "type": "string",
            "format": "uuid"
          },
          "locked": {
            "title": "Locked",
            "type": "boolean"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string"
          },
          "shifts": {
            "title": "Shifts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftDTO"
            }
          }
        },
        "description": "DTO-model for schedule updates."
      },
      "SchedulePeriodDTO": {
        "title": "SchedulePeriodDTO",
        "required": [
          "name",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "startDate": {
            "title": "Startdate",
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "title": "Enddate",
            "type": "string",
            "format": "date"
          }
        },
        "description": "DTO-model for SchedulePeriod."
      },
      "SchedulePeriodPatchDTO": {
        "title": "SchedulePeriodPatchDTO",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "startDate": {
            "title": "Startdate",
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "title": "Enddate",
            "type": "string",
            "format": "date"
          }
        },
        "description": "DTO-model for patching a SchedulePeriod."
      },
      "ScheduleQueryDTO": {
        "title": "ScheduleQueryDTO",
        "type": "object",
        "properties": {
          "agentIds": {
            "title": "Agentids",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "schedulePeriodIds": {
            "title": "Scheduleperiodids",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": "Query-dto."
      },
      "ScheduledActivityDTO": {
        "title": "ScheduledActivityDTO",
        "required": [
          "activityId",
          "startTime",
          "endTime"
        ],
        "type": "object",
        "properties": {
          "activityId": {
            "title": "Activityid",
            "type": "string",
            "format": "uuid"
          },
          "startTime": {
            "title": "Starttime",
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "title": "Endtime",
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Represent an activity scheduled within a shift."
      },
      "ShiftDTO": {
        "title": "ShiftDTO",
        "required": [
          "locked",
          "activities"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "locked": {
            "title": "Locked",
            "type": "boolean"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean",
            "default": false
          },
          "activities": {
            "title": "Activities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledActivityDTO"
            }
          },
          "startTime": {
            "title": "Starttime",
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "title": "Endtime",
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Represents the DTO-model for a shift."
      },
      "ShiftPatchDTO": {
        "title": "ShiftPatchDTO",
        "type": "object",
        "properties": {
          "locked": {
            "title": "Locked",
            "type": "boolean"
          },
          "activities": {
            "title": "Activities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledActivityDTO"
            }
          }
        },
        "description": "DTO-model for shift-updates."
      },
      "SimulationDTO": {
        "title": "SimulationDTO",
        "required": [
          "schedulePeriodId",
          "startDateTime",
          "competencies"
        ],
        "type": "object",
        "properties": {
          "schedulePeriodId": {
            "title": "Scheduleperiodid",
            "type": "string",
            "format": "uuid"
          },
          "startDateTime": {
            "title": "Startdatetime",
            "type": "string",
            "format": "date-time"
          },
          "totalOccupancy": {
            "title": "Totaloccupancy",
            "type": "array",
            "items": {
              "type": "number"
            },
            "default": []
          },
          "agentsUnderLimit": {
            "title": "Agentsunderlimit",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentOccupancyLimit"
            },
            "default": []
          },
          "agentsAboveLimit": {
            "title": "Agentsabovelimit",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentOccupancyLimit"
            },
            "default": []
          },
          "competencies": {
            "title": "Competencies",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompetencyResult"
            }
          },
          "agents": {
            "title": "Agents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentResult"
            }
          }
        },
        "description": "A simulation result."
      },
      "SimulationRequestDTO": {
        "title": "SimulationRequestDTO",
        "required": [
          "schedulePeriodId",
          "timelineId"
        ],
        "type": "object",
        "properties": {
          "schedulePeriodId": {
            "title": "Scheduleperiodid",
            "type": "string",
            "format": "uuid"
          },
          "timelineId": {
            "title": "Timelineid",
            "type": "string",
            "format": "uuid"
          },
          "agents": {
            "title": "Agents",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "competencies": {
            "title": "Competencies",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "upperOccupancyLimits": {
            "title": "Upperoccupancylimits",
            "type": "array",
            "items": {
              "type": "number"
            },
            "default": []
          },
          "lowerOccupancyLimits": {
            "title": "Loweroccupancylimits",
            "type": "array",
            "items": {
              "type": "number"
            },
            "default": []
          },
          "includeFullAgentResult": {
            "title": "Includefullagentresult",
            "type": "boolean",
            "default": false
          }
        },
        "description": "A request for a simulation.\n\nA simulation request can only include agents or competencies, not both.\n\nAttributes\n----------\nschedule_period_id : UUID\n\ntimeline_id : UUID\n\nagents : Optional[List[UUID]]\n\ncompetencies : Optional[List[UUID]]\n\nupper_occupancy_limits : List[float] = []\n    Values can be between 0 and 1 and represent a percentage. If specified\n    the result will include an array with the number of agents above\n    the occupancy limit per 15 min period.\n\nlower_occupancy_limits : List[float] = []\n    Values can be between 0 and 1 and represent a percentage. If specified\n    the result will include an array with the number of agents below\n    the occupancy limit per 15 min period.\n\ninclude_full_agent_result : bool = False\n    If specified the occupancies per agent will be added to the result."
      },
      "Synchronize": {
        "title": "Synchronize",
        "enum": [
          "synchronize"
        ],
        "description": "Synchronize if schedule should be synchronized."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Agent",
      "description": "Routes for interacting with agents.\n\nAn agent is a person that works in the contact center.\n"
    },
    {
      "name": "Restrictions",
      "description": "Restriction sets routes.\n\nA RestrictionSet is a collection of restrictions that applies when an\nagent is being scheduled.\n"
    },
    {
      "name": "Availability",
      "description": "Routes for interacting with availabilities.\n\nAvailabilities describe when an agent can be scheduled.\n"
    },
    {
      "name": "Break settings",
      "description": "Routes for managing break settings.\n\nA Break Setting is a set of break specific restrictions used when scheduleling.\nAn Agent can have several assigned break settings.\n"
    },
    {
      "name": "Competency",
      "description": "Routes for interacting with competencies.\n\nA Competency represents some work that an agent can perform, e.g., handling\ninteractions from a queue, working as team lead or doing back-office tasks.\n"
    },
    {
      "name": "Plans",
      "description": "Routes for interacting with Plans.\n\nA plan is a collection of schedules. A contact center can have multiple plans\nfor different purposes such as testing scenarios, doing preliminary planning,\none plan will be set as the official plan and this plan can be published to\nagents. A plan is not restricted to a date range but should be viewed as a\n(possibly) continuous set of schedules.\n"
    },
    {
      "name": "Schedule Period",
      "description": "Routes for interacting with Schedule Periods.\n\nA schedule period defines the period that is used scheduling within an\norganization. The schedule period allows the scheduling process to work around\na common period within which schedules can be organized and moved between\nplans. The start- and end-date of the schedule period is related to the agent's\nown timezone and not strictly to the tenant's timezone. The actual time range\nof the schedule period is therefore dependent on the agents that are scheduled\nwithin it.\n"
    },
    {
      "name": "Schedules",
      "description": "Routes for managing schedules.\n\nA schedule is a finite set of shifts limited by a date range. The schedule can\nbut does not have to be assigned to an agent.\n"
    },
    {
      "name": "Shifts",
      "description": "Routes for handling CRUD-operations on shifts.\n\nA shift is a continuos period of work for an agent and consists of one or more\nactivities that an agent is scheduled for during that day. A shift can stretch\ninto the next day. There can be no gap between activities in a shift.\n"
    },
    {
      "name": "Activities",
      "description": "Routes for managing activities.\n\nAn activity is information about what an agent is scheduled to do. Activities\nare tasks that can be scheduled for agents. Activities cannot be deleted, only\ndisabled.\n"
    },
    {
      "name": "Optimization",
      "description": "Routes related to optimization.\n\nOptimization is the process of generating schedules that are optimal for a\nnumber of agents evaluated by a forecast of expected workload. A plan can\nonly have one optimization running at a time.\n"
    },
    {
      "name": "Simulation",
      "description": "Routes for simulating plans.\n\nSimulation is the process of simulating a given number of schedules based on a\nworkload from a number of competencies. In a simulation the agents will handle\ninteractions and it is therefore currently not supported to simulate schedules\nwithout an agent. The simulation can be based on either agents or competencies.\nIf agents are selected, the simulation will use forecasts for all competencies\nassociated with the agents. If competencies are selected, then all agents that\nhas a schedule during the period and at least one of the competencies will be\nsimulated. All available channel types for the competencies will be used.\n"
    },
    {
      "name": "Organization (Not implemented)",
      "description": "Agents can be grouped into organizations that\n        provides order and allows actions to be performed on multiple\n        agents at once. Organizations are hierarchical meaning that an\n        organization can have sub-organization (like a\n        departmental structure). A sub-organization can only be a member\n        of a single parent organization. Agents can be members of only\n        one organization.\n        "
    }
  ]
}